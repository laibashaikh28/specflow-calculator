<?xml version="1.0" encoding="utf-8"?>
<TestRun id="34336b4e-c2a8-4c7f-a250-bd843fd79e50" name="@fv-az1242-41 2024-08-08 09:54:43" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2024-08-08T09:54:43.3215918+00:00" queuing="2024-08-08T09:54:43.3215919+00:00" start="2024-08-08T09:54:40.8163820+00:00" finish="2024-08-08T09:54:43.3291507+00:00" />
  <TestSettings name="default" id="01a7409b-b4d3-4a9e-9211-02e5b5e1eadf">
    <Deployment runDeploymentRoot="_fv-az1242-41_2024-08-08_09_54_43" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="4a1c0351-41bd-44fd-9b17-b9ebe9905e5e" testId="d7e86b81-3b21-ff4c-6751-c1e858bcd0d8" testName="Add two numbers" computerName="fv-az1242-41" duration="00:00:00.0014418" startTime="2024-08-08T09:54:42.8965755+00:00" endTime="2024-08-08T09:54:42.8965759+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4a1c0351-41bd-44fd-9b17-b9ebe9905e5e">
      <Output>
        <StdOut>Given the first number is 50
-&gt; done: CalculatorStepDefinitions.GivenTheFirstNumberIs(50) (0.0s)
And the second number is 70
-&gt; done: CalculatorStepDefinitions.GivenTheSecondNumberIs(70) (0.0s)
When the two numbers are added
-&gt; done: CalculatorStepDefinitions.WhenTheTwoNumbersAreAdded() (0.0s)
Then the result should be 120
-&gt; done: CalculatorStepDefinitions.ThenTheResultShouldBe(120) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="46332b12-76ea-4703-ac17-2010aba3410b" testId="00ff9f7c-a118-0f3d-24e9-77b6f65125f7" testName="Subtract two numbers" computerName="fv-az1242-41" duration="00:00:00.1156823" startTime="2024-08-08T09:54:42.8926539+00:00" endTime="2024-08-08T09:54:42.8926750+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="46332b12-76ea-4703-ac17-2010aba3410b">
      <Output>
        <StdOut>Given the first number is 120
-&gt; done: CalculatorStepDefinitions.GivenTheFirstNumberIs(120) (0.0s)
And the second number is 70
-&gt; done: CalculatorStepDefinitions.GivenTheSecondNumberIs(70) (0.0s)
When the two numbers are subtracted
-&gt; done: CalculatorStepDefinitions.WhenTheTwoNumbersAreSubtracted() (0.0s)
Then the result should be 50
-&gt; done: CalculatorStepDefinitions.ThenTheResultShouldBe(50) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
  </Results>
  <TestDefinitions>
    <UnitTest name="Subtract two numbers" storage="/home/runner/work/specflow-calculator/specflow-calculator/specflowcalculator.specs/bin/release/netcoreapp3.1/specflowcalculator.specs.dll" id="00ff9f7c-a118-0f3d-24e9-77b6f65125f7">
      <Execution id="46332b12-76ea-4703-ac17-2010aba3410b" />
      <TestMethod codeBase="/home/runner/work/specflow-calculator/specflow-calculator/SpecFlowCalculator.Specs/bin/Release/netcoreapp3.1/SpecFlowCalculator.Specs.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="SpecFlowCalculator.Specs.CalculatorFeature" name="SubtractTwoNumbers" />
    </UnitTest>
    <UnitTest name="Add two numbers" storage="/home/runner/work/specflow-calculator/specflow-calculator/specflowcalculator.specs/bin/release/netcoreapp3.1/specflowcalculator.specs.dll" id="d7e86b81-3b21-ff4c-6751-c1e858bcd0d8">
      <Execution id="4a1c0351-41bd-44fd-9b17-b9ebe9905e5e" />
      <TestMethod codeBase="/home/runner/work/specflow-calculator/specflow-calculator/SpecFlowCalculator.Specs/bin/Release/netcoreapp3.1/SpecFlowCalculator.Specs.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="SpecFlowCalculator.Specs.CalculatorFeature" name="AddTwoNumbers" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="d7e86b81-3b21-ff4c-6751-c1e858bcd0d8" executionId="4a1c0351-41bd-44fd-9b17-b9ebe9905e5e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="00ff9f7c-a118-0f3d-24e9-77b6f65125f7" executionId="46332b12-76ea-4703-ac17-2010aba3410b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Completed">
    <Counters total="2" executed="2" passed="2" failed="0" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>[xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v2.4.3+1b45f5407b (64-bit .NET Core 3.1.32)
[xUnit.net 00:00:00.49]   Discovering: SpecFlowCalculator.Specs
[xUnit.net 00:00:00.55]   Discovered:  SpecFlowCalculator.Specs
[xUnit.net 00:00:00.55]   Starting:    SpecFlowCalculator.Specs
[xUnit.net 00:00:01.08]   Finished:    SpecFlowCalculator.Specs
</StdOut>
    </Output>
  </ResultSummary>
</TestRun>